version: '3.8'

services:
  # Express PHP Benchmark Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.benchmark
    container_name: express-php-benchmark
    volumes:
      - ./benchmarks:/app/benchmarks
      - ./src:/app/src
      - benchmark-results:/app/benchmarks/results
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=express_benchmark
      - DB_USERNAME=benchmark_user
      - DB_PASSWORD=benchmark_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BENCHMARK_ENV=docker
    depends_on:
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - benchmark-network
    command: >
      sh -c "
        echo 'Waiting for services to be ready...';
        sleep 5;
        echo 'Running benchmarks...';
        php benchmarks/run_all_benchmarks.php
      "

  # MySQL Database for benchmarks
  mysql:
    image: mysql:8.0
    container_name: express-php-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: express_benchmark
      MYSQL_USER: benchmark_user
      MYSQL_PASSWORD: benchmark_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./benchmarks/sql/init-mysql.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - benchmark-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=1000
      --innodb_buffer_pool_size=1G
      --innodb_log_file_size=256M
      --innodb_flush_log_at_trx_commit=2
      --innodb_flush_method=O_DIRECT

  # PostgreSQL Database for benchmarks
  postgres:
    image: postgres:15-alpine
    container_name: express-php-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: benchmark_user
      POSTGRES_PASSWORD: benchmark_pass
      POSTGRES_DB: express_benchmark
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./benchmarks/sql/init-postgres.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U benchmark_user -d express_benchmark"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - benchmark-network
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_connections=200

  # MariaDB Database for benchmarks
  mariadb:
    image: mariadb:11
    container_name: express-php-mariadb
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: root_password
      MARIADB_DATABASE: express_benchmark
      MARIADB_USER: benchmark_user
      MARIADB_PASSWORD: benchmark_pass
    ports:
      - "3308:3306"
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./benchmarks/sql/init-mariadb.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - benchmark-network
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=1000
      --innodb_buffer_pool_size=1G
      --innodb_log_file_size=256M
      --innodb_flush_log_at_trx_commit=2
      --innodb_flush_method=O_DIRECT
      --innodb_io_capacity=2000
      --innodb_io_capacity_max=4000

  # Redis for caching benchmarks
  redis:
    image: redis:7-alpine
    container_name: express-php-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - benchmark-network
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no

  # PHPMyAdmin for database inspection (optional)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: express-php-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: benchmark_user
      PMA_PASSWORD: benchmark_pass
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - benchmark-network
    profiles:
      - debug

  # Redis Commander for Redis inspection (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: express-php-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - benchmark-network
    profiles:
      - debug

volumes:
  mysql-data:
    driver: local
  postgres-data:
    driver: local
  mariadb-data:
    driver: local
  redis-data:
    driver: local
  benchmark-results:
    driver: local

networks:
  benchmark-network:
    driver: bridge