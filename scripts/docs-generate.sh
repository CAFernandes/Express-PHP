#!/bin/bash

# Script de Gera√ß√£o de Documenta√ß√£o para Express-PHP
# Gera documenta√ß√£o autom√°tica, atualiza vers√µes e organiza arquivos

set -e

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

info() { echo -e "${BLUE}üìñ $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; exit 1; }
title() { echo -e "${PURPLE}üìö $1${NC}"; }

# Verificar se estamos na raiz do projeto
if [ ! -f "composer.json" ]; then
    error "Execute este script na raiz do projeto Express-PHP"
fi

title "Express-PHP Documentation Generator"
echo ""

# Obter vers√£o atual
VERSION=$(grep '"version"' composer.json | sed 's/.*"version": "\([^"]*\)".*/\1/' || echo "2.0.0")
DATE=$(date +%Y-%m-%d)

info "Vers√£o: $VERSION"
info "Data: $DATE"
echo ""

# 1. Atualizar README principal
info "Atualizando README.md..."

if [ ! -f "README.md" ]; then
    cat > README.md << EOF
# Express-PHP Framework

[![Version](https://img.shields.io/badge/version-v$VERSION-blue.svg)](https://github.com/CAFernandes/express-php/releases)
[![PHP](https://img.shields.io/badge/PHP-%3E%3D8.1-777BB4.svg)](https://php.net/)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![Tests](https://img.shields.io/badge/tests-219%20passing-brightgreen.svg)](tests/)

Express-PHP √© um microframework moderno, r√°pido e seguro para PHP, inspirado no Express.js. Constru√≠do com arquitetura modular e PSR-4, oferece todas as ferramentas necess√°rias para desenvolvimento de APIs e aplica√ß√µes web modernas.

## üöÄ Vers√£o $VERSION - Modular Edition

Esta vers√£o representa uma **completa moderniza√ß√£o** do framework com:

- ‚úÖ **Arquitetura Modular** com PSR-4
- ‚úÖ **6 Middlewares de Seguran√ßa** (CORS, Auth, XSS, CSRF, Security, RateLimit)
- ‚úÖ **6 M√≥dulos Avan√ßados** (Validation, Cache, Events, Logging, Support, Database)
- ‚úÖ **219 Testes** com 92.4% de taxa de sucesso
- ‚úÖ **Documenta√ß√£o Completa** em portugu√™s
- ‚úÖ **Compatibilidade Backward** mantida

## üì¶ Instala√ß√£o

\`\`\`bash
composer require express-php/microframework
\`\`\`

## üèÉ‚Äç‚ôÇÔ∏è In√≠cio R√°pido

\`\`\`php
<?php
require_once 'vendor/autoload.php';

use Express\\ApiExpress;

\$app = new ApiExpress();

\$app->get('/', function() {
    return ['message' => 'Hello, Express-PHP v$VERSION!'];
});

\$app->listen(8080);
\`\`\`

## üìñ Documenta√ß√£o

- **[üìò Documenta√ß√£o Completa](README_v2.md)** - Guia completo em portugu√™s
- **[üöÄ Como Usar](examples/COMO_USAR.md)** - Tutorial pr√°tico
- **[üìã CHANGELOG](CHANGELOG.md)** - Hist√≥rico de vers√µes
- **[üîß Exemplos](examples/)** - C√≥digos de exemplo

## üõ°Ô∏è Recursos de Seguran√ßa

- **CORS** configur√°vel para APIs
- **Autentica√ß√£o** JWT, Basic Auth, Bearer Token
- **Prote√ß√£o XSS** autom√°tica
- **CSRF** com tokens
- **Headers de Seguran√ßa** (HSTS, CSP, etc.)
- **Rate Limiting** para controle de tr√°fego

## üß© M√≥dulos Avan√ßados

- **Validation** - Sistema robusto de valida√ß√£o
- **Cache** - Cache em arquivo/mem√≥ria com TTL
- **Events** - Sistema de eventos com prioridades
- **Logging** - Logger estruturado
- **Support** - Helpers utilit√°rios (Str, Arr)
- **Database** - Conex√£o PDO simplificada

## üß™ Testes

\`\`\`bash
# Executar todos os testes
./vendor/bin/phpunit

# Testes espec√≠ficos (excluindo streaming)
./vendor/bin/phpunit --exclude-group streaming
\`\`\`

## üìä Status dos Testes

- **219 testes passando** (92.4% sucesso)
- **Cobertura completa** de middlewares
- **M√≥dulos avan√ßados** validados
- **Integra√ß√£o** testada

## ü§ù Contribui√ß√£o

1. Fork o projeto
2. Crie uma branch para sua feature
3. Commit suas mudan√ßas
4. Push para a branch
5. Abra um Pull Request

## üìÑ Licen√ßa

Este projeto est√° licenciado sob a Licen√ßa MIT - veja o arquivo [LICENSE](LICENSE) para detalhes.

## üîó Links

- [GitHub](https://github.com/CAFernandes/express-php)
- [Packagist](https://packagist.org/packages/express-php/microframework)
- [Issues](https://github.com/CAFernandes/express-php/issues)
- [Releases](https://github.com/CAFernandes/express-php/releases)

---

**Express-PHP v$VERSION** - Constru√≠do com ‚ù§Ô∏è para a comunidade PHP brasileira
EOF
else
    # Atualizar vers√£o no README existente
    sed -i.bak "s/v[0-9]\+\.[0-9]\+\.[0-9]\+/v$VERSION/g" README.md && rm README.md.bak
fi

success "README.md atualizado"

# 2. Atualizar badge de vers√£o
info "Atualizando badges de vers√£o..."
for file in README.md README_v2.md; do
    if [ -f "$file" ]; then
        sed -i.bak "s/version-v[0-9]\+\.[0-9]\+\.[0-9]\+/version-v$VERSION/g" "$file" && rm "${file}.bak"
    fi
done

success "Badges atualizados"

# 3. Gerar √≠ndice de documenta√ß√£o
info "Gerando √≠ndice de documenta√ß√£o..."

cat > docs/INDEX.md << 'EOF'
# Express-PHP Framework - √çndice de Documenta√ß√£o

## üìö Documenta√ß√£o Principal

### Guias Iniciais
- [README Principal](../README.md) - Vis√£o geral e in√≠cio r√°pido
- [README v2](../README_v2.md) - Documenta√ß√£o completa em portugu√™s
- [Como Usar](../examples/COMO_USAR.md) - Tutorial pr√°tico passo a passo
- [CHANGELOG](../CHANGELOG.md) - Hist√≥rico de vers√µes e mudan√ßas

### Relat√≥rios de Status
- [Status Final](../FINAL_STATUS_REPORT.md) - Relat√≥rio final do projeto
- [Miss√£o Cumprida](../MISSION_ACCOMPLISHED.md) - Resumo das conquistas
- [Relat√≥rio de Modulariza√ß√£o](../MODULARIZATION_FINAL_REPORT.md) - Detalhes t√©cnicos

## üèóÔ∏è Documenta√ß√£o T√©cnica

### Arquitetura
- [Organiza√ß√£o do Projeto](implementation/PROJECT_ORGANIZATION.md)
- [Resumo da Implementa√ß√£o](implementation/AUTH_IMPLEMENTATION_SUMMARY.md)
- [Conclus√£o do Projeto](implementation/PROJECT_COMPLETION.md)

### Desenvolvimento
- [Guia de Desenvolvimento](development/DEVELOPMENT.md)
- [Composer PSR-4](development/COMPOSER_PSR4.md)
- [Internacionaliza√ß√£o](development/INTERNATIONALIZATION.md)
- [Migra√ß√£o de Middlewares](development/MIDDLEWARE_MIGRATION.md)

### Seguran√ßa
- [Implementa√ß√£o de Seguran√ßa](guides/SECURITY_IMPLEMENTATION.md)
- [Middleware de Autentica√ß√£o](pt-br/AUTH_MIDDLEWARE.md)

## üß© Documenta√ß√£o dos M√≥dulos

### M√≥dulos Core
- [ApiExpress](../src/ApiExpress.php) - Facade principal
- [Router](../src/Routing/Router.php) - Sistema de roteamento
- [Request/Response](../src/Http/) - Objetos HTTP
- [Middleware Stack](../src/Middleware/) - Sistema de middleware

### M√≥dulos Avan√ßados
- [Validation](../src/Validation/) - Sistema de valida√ß√£o
- [Cache](../src/Cache/) - Sistema de cache
- [Events](../src/Events/) - Sistema de eventos
- [Logging](../src/Logging/) - Sistema de logging
- [Support](../src/Support/) - Utilit√°rios
- [Database](../src/Database/) - Conex√£o de banco

## üõ°Ô∏è Middlewares de Seguran√ßa

- [CORS Middleware](../src/Middleware/Security/CorsMiddleware.php)
- [Auth Middleware](../src/Middleware/Security/AuthMiddleware.php)
- [Security Middleware](../src/Middleware/Security/SecurityMiddleware.php)
- [XSS Middleware](../src/Middleware/Security/XssMiddleware.php)
- [CSRF Middleware](../src/Middleware/Security/CsrfMiddleware.php)
- [Rate Limit Middleware](../src/Middleware/Core/RateLimitMiddleware.php)

## üìù Exemplos Pr√°ticos

### Exemplos B√°sicos
- [App Completo](../examples/app.php) - Aplica√ß√£o completa
- [App Limpo](../examples/app_clean.php) - Vers√£o simplificada
- [Exemplo Modular](../examples/example_modular.php) - Arquitetura modular

### Exemplos Avan√ßados
- [M√≥dulos Avan√ßados](../examples/example_advanced.php) - Todos os recursos
- [Seguran√ßa](../examples/example_security_new.php) - Middlewares de seguran√ßa
- [Streaming](../examples/example_streaming_new.php) - Resposta streaming
- [Autentica√ß√£o](../examples/example_auth.php) - Sistema de auth

### Snippets
- [Rotas de Usu√°rio](../examples/snippets/user_routes.php)
- [Rotas de Admin](../examples/snippets/admin_routes.php)
- [Utilit√°rios de Seguran√ßa](../examples/snippets/utils_seguranca.php)
- [Valida√ß√£o](../examples/snippets/utils_validacao.php)

## üß™ Testes

### Estrutura de Testes
- [Tests Directory](../tests/) - Todos os testes
- [Core Tests](../tests/Core/) - Testes dos m√≥dulos core
- [Security Tests](../tests/Security/) - Testes de seguran√ßa
- [Services Tests](../tests/Services/) - Testes de servi√ßos

### Relat√≥rios
- [Coverage Report](TEST_COVERAGE_REPORT.md) - Relat√≥rio de cobertura

## üöÄ Scripts de Desenvolvimento

- [Release Script](../scripts/release.sh) - Script de release
- [Version Bump](../scripts/version-bump.sh) - Versionamento sem√¢ntico
- [Validation Script](../scripts/validate_project.php) - Valida√ß√£o do projeto

## üåê Idiomas

### Portugu√™s (pt-br)
- [README](pt-br/README.md)
- [Objetos](pt-br/objetos.md)
- [Auth Middleware](pt-br/AUTH_MIDDLEWARE.md)

### English (en)
- [README](en/README.md)
- [Objects](en/objects.md)

## üì¶ Informa√ß√µes do Projeto

- **Vers√£o Atual**: EOF

# Adicionar vers√£o dinamicamente
echo "$VERSION" >> docs/INDEX.md

cat >> docs/INDEX.md << 'EOF'
- **PHP M√≠nimo**: 8.1+
- **Licen√ßa**: MIT
- **Testes**: 219 passando (92.4%)
- **Arquitetura**: PSR-4 Modular

---

*Documenta√ß√£o gerada automaticamente em EOF

echo "$DATE*" >> docs/INDEX.md

success "√çndice de documenta√ß√£o gerado"

# 4. Validar links da documenta√ß√£o
info "Validando estrutura da documenta√ß√£o..."

# Verificar se arquivos principais existem
required_files=(
    "README.md"
    "README_v2.md"
    "CHANGELOG.md"
    "examples/COMO_USAR.md"
)

missing_files=()
for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -gt 0 ]; then
    warning "Arquivos de documenta√ß√£o ausentes:"
    for file in "${missing_files[@]}"; do
        echo "  - $file"
    done
else
    success "Todos os arquivos de documenta√ß√£o est√£o presentes"
fi

# 5. Gerar sum√°rio de arquivos de exemplo
info "Atualizando sum√°rio de exemplos..."

cat > examples/README.md << EOF
# Exemplos do Express-PHP Framework

Esta pasta cont√©m exemplos pr√°ticos demonstrando todas as funcionalidades do Express-PHP v$VERSION.

## üìö Guias e Documenta√ß√£o

- **[COMO_USAR.md](COMO_USAR.md)** - Tutorial completo em portugu√™s

## üöÄ Exemplos Principais

### Aplica√ß√µes Completas
- **[app.php](app.php)** - Aplica√ß√£o completa com todos os recursos

### Funcionalidades Espec√≠ficas
- **[example_basic.php](example_basic.php)** - API REST b√°sica e conceitos fundamentais
- **[example_auth.php](example_auth.php)** - Sistema completo de autentica√ß√£o
- **[example_auth_simple.php](example_auth_simple.php)** - Implementa√ß√£o b√°sica de JWT
- **[example_middleware.php](example_middleware.php)** - Middlewares avan√ßados e API de produtos
- **[example_middleware.php](example_middleware.php)** - Middlewares avan√ßados e API de produtos

## üß© Snippets Reutiliz√°veis

A pasta **[snippets/](snippets/)** cont√©m c√≥digos reutiliz√°veis:

- **[user_routes.php](snippets/user_routes.php)** - Rotas de usu√°rio
- **[admin_routes.php](snippets/admin_routes.php)** - Rotas administrativas
- **[auth_snippets.php](snippets/auth_snippets.php)** - Autentica√ß√£o
- **[utils_seguranca.php](snippets/utils_seguranca.php)** - Utilit√°rios de seguran√ßa
- **[utils_validacao.php](snippets/utils_validacao.php)** - Valida√ß√£o de dados

## üèÉ‚Äç‚ôÇÔ∏è Como Executar

### Servidor PHP Built-in
\`\`\`bash
# Executar um exemplo espec√≠fico
php -S localhost:8080 examples/app.php

# Ou usar o script helper
cd examples && ./start-server.sh
\`\`\`

### Docker (se dispon√≠vel)
\`\`\`bash
docker run -p 8080:8080 -v \$(pwd):/app php:8.1-cli php -S 0.0.0.0:8080 /app/examples/app.php
\`\`\`

## üìñ Estrutura dos Exemplos

Cada exemplo segue esta estrutura:

1. **Configura√ß√£o** - Autoload e configura√ß√µes iniciais
2. **Middlewares** - Configura√ß√£o de middlewares de seguran√ßa
3. **Rotas** - Defini√ß√£o das rotas da aplica√ß√£o
4. **Handlers** - L√≥gica de neg√≥cio
5. **Inicializa√ß√£o** - Start do servidor

## üîß Requisitos

- PHP 8.1 ou superior
- Composer (para autoload)
- Extens√µes: json, mbstring, openssl (para JWT)

## üìù Notas

- Todos os exemplos s√£o auto-contidos
- Use CORS development apenas em desenvolvimento
- Configure adequadamente em produ√ß√£o
- Veja [COMO_USAR.md](COMO_USAR.md) para guia detalhado

---

**Express-PHP v$VERSION** - Exemplos atualizados em $DATE
EOF

success "Sum√°rio de exemplos atualizado"

echo ""
success "üéâ Documenta√ß√£o gerada com sucesso!"
echo ""
info "Arquivos atualizados:"
echo "  ‚Ä¢ README.md"
echo "  ‚Ä¢ docs/INDEX.md"
echo "  ‚Ä¢ examples/README.md"
echo "  ‚Ä¢ Badges de vers√£o"
echo ""
info "Vers√£o: $VERSION"
info "Data: $DATE"
echo ""
